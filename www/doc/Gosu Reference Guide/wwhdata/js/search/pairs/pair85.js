function FileData_Pairs(x)
{
x.t("example","suppose");
x.t("example","annotations");
x.t("example","specifies");
x.t("example","someannotation");
x.t("example","following");
x.t("passed","empty");
x.t("method","type");
x.t("method","property");
x.t("method","constructor");
x.t("method","argument");
x.t("method","methods");
x.t("method","throw");
x.t("method","(1)");
x.t("method","deprecated");
x.t("method","returns");
x.t("notes","gosu");
x.t("@param","name");
x.t("@param","specifies");
x.t("param","eter");
x.t("parameter","(2)");
x.t("parameter","@returns");
x.t("available","future");
x.t("defines","class");
x.t("annotation","example");
x.t("annotation","description");
x.t("annotation","name");
x.t("annotation","sign");
x.t("annotation","may");
x.t("annotation","@com.mycompany.some.package.someannotation");
x.t("annotation","defined");
x.t("annotation","called");
x.t("annotation","naturally");
x.t("annotation","class");
x.t("within","parentheses");
x.t("within","package");
x.t("lists","built-in");
x.t("lists","@knownbreak");
x.t("lists","format");
x.t("lists","//");
x.t("built-in","annotations");
x.t("built-in","general");
x.t("table","lists");
x.t("description","usage");
x.t("description","javadoc");
x.t("kinds","exceptions");
x.t("related","information");
x.t("always","scope");
x.t("required","following");
x.t("once","specific");
x.t("once","per");
x.t("user's","name");
x.t("ensures","code");
x.t("arguments","annotation");
x.t("arguments","arguments");
x.t("arguments","argument");
x.t("arguments","may");
x.t("arguments","calling");
x.t("arguments","named");
x.t("arguments","optionally");
x.t("arguments","following");
x.t("regular","function");
x.t("limits","parameters");
x.t("user","branch");
x.t("user",":targetbranch");
x.t("java.lang.exception","@wsiwebservice");
x.t("current","gosu");
x.t("uses","java.lang.exception");
x.t("uses","statement");
x.t("uses","com.mycompany.some.package.someannotation");
x.t("uses","several");
x.t("uses","deprecated");
x.t("implemented","gosu");
x.t("text_val.select","link");
x.t("support","named");
x.t("statement","annotation");
x.t("type","(2)");
x.t("type","constructor");
x.t("time","annotation");
x.t("external","systems");
x.t("public","function");
x.t("mymethod","annotation");
x.t("mymethod","print");
x.t("(2)","description");
x.t("(2)","documentation");
x.t("followed","annotation");
x.t("expose","web");
x.t("releases","simplify");
x.t("don't","myclass.mymethod");
x.t("property","example");
x.t("property","away");
x.t("property","(1)");
x.t("property","appear");
x.t("text","invalid");
x.t("require","arguments");
x.t("greeting","user's");
x.t("apis","ensures");
x.t("link","directly");
x.t("parseexception","public");
x.t("branch",":jira");
x.t("branch","abc-xxxxx");
x.t("thrown","method");
x.t("==","throw");
x.t("==","null");
x.t("start","refactor");
x.t("refactor","code");
x.t("someclass","alternatively");
x.t("includes","built-in");
x.t("messsage","gosu");
x.t("list","notes");
x.t("list","within");
x.t("eter","methods");
x.t("add","annotation");
x.t("add","indicate");
x.t("add","metadata");
x.t("add","completely");
x.t("name.length","==");
x.t("guide","annotations");
x.t("simple","example");
x.t("simple","syntax");
x.t("api","temporarily");
x.t("api","anymore");
x.t("remove","immediately");
x.t("@throws","specifies");
x.t("@throws","exception");
x.t("@throws","java.text.parseexception");
x.t("throws","parseexception");
x.t("directly","java");
x.t("directly","page");
x.t("requires","argument");
x.t("requires","non-empty");
x.t("defaults","built-in");
x.t("circumstances","throw");
x.t("test","@param");
x.t("text_val.focus","text_val.select");
x.t("name","parameter");
x.t("name","required");
x.t("name","user's");
x.t("name","uses");
x.t("name","==");
x.t("name","@throws");
x.t("name","argument");
x.t("name","empty");
x.t("name","string");
x.t("name","immediately");
x.t("name","following");
x.t("no","arguments");
x.t("constructor","method");
x.t("constructor","property");
x.t("constructor","annotating");
x.t("constructor","function");
x.t("constructor","annotations");
x.t("constructor","used");
x.t("gosu","uses");
x.t("gosu","directly");
x.t("gosu","requires");
x.t("gosu","argument");
x.t("gosu","annotations");
x.t("gosu","language");
x.t("gosu","scope");
x.t("gosu","reference");
x.t("gosu","classes");
x.t("gosu","class");
x.t("annotate","example");
x.t("paren","theses");
x.t("@knownbreak","user");
x.t("@knownbreak",":targetuser");
x.t("com.mycompany.some.package","specify");
x.t("annotating","class");
x.t("custom","annotations");
x.t("argument","lists");
x.t("argument","list");
x.t("argument","defaults");
x.t("avoid","using");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("parameters","@param");
x.t("methods","once");
x.t("methods","(1)");
x.t("compatible","future");
x.t("alternatively","import");
x.t("indicate","method");
x.t("indicate","kinds");
x.t("sign","followed");
x.t("declarations","annotate");
x.t("omit","paren");
x.t("omit","parentheses");
x.t("standard","gosu");
x.t("web","service");
x.t("away","future");
x.t(":targetbranch","branch");
x.t("string","passed");
x.t("string","name");
x.t("string","string");
x.t("string","display");
x.t("string","return");
x.t("string","@returns");
x.t("empty","string");
x.t("empty","null");
x.t(":targetuser","user");
x.t("temporarily","available");
x.t("defining","annotations");
x.t("metadata","gosu");
x.t("begin","rewriting");
x.t("simplify","upgrades");
x.t("error","occurred");
x.t("display","deprecated");
x.t("com.mycompany","uses");
x.t("friendlygreeting","name");
x.t("syntax","add");
x.t("syntax","@myannotation");
x.t("suppose","add");
x.t("(verbose)","syntax");
x.t("throw","add");
x.t("throw","requires");
x.t("throw","specific");
x.t("throw","exception");
x.t("means","valid");
x.t("guidewire_selectall","var");
x.t("function","method");
x.t("function","mymethod");
x.t("function","friendlygreeting");
x.t("function","throw");
x.t("function","guidewire_selectall");
x.t("function","myremotemethod");
x.t("function","bettermethod");
x.t("annotations","annotation");
x.t("annotations","implemented");
x.t("annotations","support");
x.t("annotations","add");
x.t("annotations","simple");
x.t("annotations","gosu");
x.t("annotations","annotating");
x.t("annotations","argument");
x.t("annotations","information");
x.t("annotations","defined");
x.t("annotations","package");
x.t("specifies","method");
x.t("specifies","function");
x.t("specifies","documentation");
x.t("specifies","class");
x.t("specifies","exceptions");
x.t("myremotemethod","cases");
x.t("may","require");
x.t("may","optional");
x.t("@com.mycompany.some.package.someannotation","class");
x.t("com.mycompany.some.package.someannotation","@someannotation");
x.t("theses","example");
x.t("language","includes");
x.t("instead","bettermethod");
x.t("format","regular");
x.t("format","throws");
x.t("format","circumstances");
x.t("format","method\u2019s");
x.t("release","remove");
x.t("release","begin");
x.t("myclass.mymethod","instead");
x.t("calling","convention");
x.t("scope","fully");
x.t("scope","ensure");
x.t("scope","fully-qualified");
x.t("(1)","name");
x.t("(1)","documentation");
x.t("(1)","exception");
x.t("(1)","warning");
x.t("reference","guide");
x.t("follow","annotation");
x.t("invalid","format");
x.t("rewriting","code");
x.t("code","defines");
x.t("code","uses");
x.t("code","avoid");
x.t("code","compatible");
x.t("anymore","deprecated");
x.t("someannotation","annotation");
x.t("@someannotation","class");
x.t("return","value");
x.t("return","hello");
x.t("return","result");
x.t("fully","qualifying");
x.t("method\u2019s","parameter");
x.t("method\u2019s","return");
x.t("appear","once");
x.t("qualifying","annotation");
x.t("parentheses","@myannotation");
x.t("parentheses","following");
x.t("java","annotations");
x.t("documentation","param");
x.t("documentation","return");
x.t("documentation","javadoc");
x.t("ensure","scope");
x.t("occurred","messsage");
x.t("null","public");
x.t("null","name.length");
x.t("natively","gosu");
x.t("myannotation","takes");
x.t("@myannotation","no");
x.t("@myannotation","annotations");
x.t("named","arguments");
x.t("usage","limits");
x.t("value","@throws");
x.t("interpret","exception");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","exception");
x.t("specific","class");
x.t("several","built-in");
x.t("exception","type");
x.t("exception","string");
x.t("exception","interpret");
x.t("exception","@deprecated");
x.t("exception","using");
x.t("exception","general");
x.t("convention","@knownbreak");
x.t("import","package");
x.t("read","run");
x.t("systems","@wsiwebservice");
x.t("takes","no");
x.t("hello","public");
x.t("hello","name");
x.t("hello","world");
x.t("valid","api");
x.t("page","error");
x.t("myserviceapi","public");
x.t("friendly","greeting");
x.t("information","named");
x.t("information","read");
x.t("optional","omit");
x.t("gw.lang","package");
x.t("defined","within");
x.t("defined","natively");
x.t("defined","gw.lang");
x.t("result","method");
x.t("future","releases");
x.t("future","release");
x.t("upgrades","class");
x.t("bettermethod","public");
x.t("bettermethod","print");
x.t("javadoc","format");
x.t("implicitly","using");
x.t("java.text.parseexception","text");
x.t("called","myannotation");
x.t("fully-qualified","name");
x.t("@deprecated","don't");
x.t("@deprecated","specifies");
x.t("deprecated","apis");
x.t("deprecated","api");
x.t("deprecated","means");
x.t("deprecated","class");
x.t("print","hello");
x.t("concisely","using");
x.t("classes","defining");
x.t("cases","follow");
x.t("optionally","omit");
x.t("immediately","start");
x.t("immediately","declarations");
x.t(":jira","abc-xxxxx");
x.t("package","always");
x.t("package","com.mycompany.some.package");
x.t("package","com.mycompany");
x.t("package","using");
x.t("naturally","concisely");
x.t("run","time");
x.t("following","example");
x.t("following","table");
x.t("following","simple");
x.t("following","(verbose)");
x.t("following","code");
x.t("service","external");
x.t("used","following");
x.t("class","method");
x.t("class","uses");
x.t("class","expose");
x.t("class","someclass");
x.t("class","test");
x.t("class","constructor");
x.t("class","myserviceapi");
x.t("class","implicitly");
x.t("class","myclass");
x.t("@wsiwebservice","class");
x.t("using","arguments");
x.t("using","current");
x.t("using","name");
x.t("using","gosu");
x.t("using","class");
x.t("//","standard");
x.t("general","annotations");
x.t("general","exception");
x.t("warning","string");
x.t("returns","indicate");
x.t("@returns","specifies");
x.t("@returns","friendly");
x.t("per","method");
x.t("non-empty","string");
x.t("myclass","@throws");
x.t("myclass","@deprecated");
x.t("world","annotations");
x.t("var","text_val=eval");
x.t("exceptions","method");
x.t("exceptions","thrown");
x.t("completely","custom");
x.t("abc-xxxxx","related");
x.t("abc-xxxxx","gosu");
x.t("specify","annotation");
}

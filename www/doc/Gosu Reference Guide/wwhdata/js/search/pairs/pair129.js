function FileData_Pairs(x)
{
x.t("fault","handling");
x.t("supports","mode");
x.t("supports","ws-i");
x.t("supports","calling");
x.t("example","method");
x.t("example","external");
x.t("example","soap");
x.t("example","wsdl");
x.t("example","methods");
x.t("example","place");
x.t("example","ports");
x.t("example","request");
x.t("example","suppose");
x.t("example","weather");
x.t("example","xsd-types");
x.t("example","two");
x.t("example","async_doaction");
x.t("differently","different");
x.t("looks","following");
x.t("root","element");
x.t("root","type=");
x.t("root","xmlelement");
x.t("root","contains");
x.t("equal","size");
x.t("examples.gosu.wsi","service");
x.t("complex","xml");
x.t("extensions","gosu");
x.t("available","separate");
x.t("available","port");
x.t("method","method");
x.t("method","five");
x.t("method","arguments");
x.t("method","calls");
x.t("method","single");
x.t("method","operation");
x.t("method","name");
x.t("method","argument");
x.t("method","handles");
x.t("method","parameters");
x.t("method","web");
x.t("method","sayhello");
x.t("method","added");
x.t("method","return");
x.t("method","takes");
x.t("method","defined");
x.t("method","called");
x.t("method","service");
x.t("method","names");
x.t("exist","once");
x.t("exist","list");
x.t("exist","wsdl");
x.t("exist","words");
x.t("doaction","method");
x.t("base64","binary");
x.t("properties","types");
x.t("properties","xml");
x.t("properties","represent");
x.t("creation","intermediary");
x.t("avail","able");
x.t("serialization","object");
x.t("digital","signatures");
x.t("anything","xsd");
x.t("fetch","web");
x.t("fetch","copies");
x.t("just","class");
x.t("version","method");
x.t("version","gosu");
x.t("version","preceding");
x.t("version","additionally");
x.t("defines","operation");
x.t("defines","request");
x.t("defines","service");
x.t("defines","var");
x.t("rather","serialized");
x.t("five","arguments");
x.t("five","elements");
x.t("files","related");
x.t("files","older");
x.t("files","(xsds)");
x.t("files","web");
x.t("files","next");
x.t("files","purposes");
x.t("files","call");
x.t("files","following");
x.t("caller","check");
x.t("subdirectory","suppose");
x.t("lists","exist");
x.t("lists","xsd-based");
x.t("within","namespace");
x.t("within","ports");
x.t("within","following");
x.t("built-in","core");
x.t("attachments","sign");
x.t("attachments","multi-step");
x.t("attachments","consuming");
x.t("describes","talk");
x.t("create","new");
x.t("create","xml");
x.t("subclasses","xmlelement");
x.t("inserts","value");
x.t("community","release");
x.t("related","wsdl");
x.t("related","rpc");
x.t("gw.xml.ws","uses");
x.t("various","operations");
x.t("course","real");
x.t("instance","type");
x.t("instance","child");
x.t("binary","data");
x.t("once","gosu");
x.t("once","element.address");
x.t("action","performs");
x.t("performs","task");
x.t("arguments","operation");
x.t("arguments","request");
x.t("arguments","ws-i");
x.t("arguments","instead");
x.t("arguments","returns");
x.t("name=","root");
x.t("improve","readability");
x.t("array/list","index");
x.t("element.propertyname","[0]");
x.t("ability","explicitly");
x.t("subpackage","types");
x.t("regular","gosu");
x.t("topic","includes");
x.t("topic","happens");
x.t("converting","wsdl");
x.t("organized","package");
x.t("creates","new");
x.t("creates","list");
x.t("creates","wsdl");
x.t("creates","intermediate");
x.t("creates","types");
x.t("creates","two");
x.t("creates","service");
x.t("refers","secondary");
x.t("referenced","wsdl");
x.t("example.pl.gs.wsic.myservice.ports.report_p1","example.pl.gs.wsic.myservice.ports.report_p2");
x.t("example.pl.gs.wsic.myservice.ports.report_p1","//");
x.t("remote","procedure");
x.t("remote","service");
x.t("shows","manually");
x.t("uses","complex");
x.t("uses","gw.xml.ws");
x.t("uses","java.net.url");
x.t("uses","java.io.file");
x.t("later","topic");
x.t("later","request");
x.t("tips","working");
x.t("example.pl.gs.wsic.myservice.ports.report_p2","additionally");
x.t("appearance","method");
x.t("text_val.select","link");
x.t("support","document");
x.t("support","types");
x.t("support","one-way");
x.t("mode","closely");
x.t("mode","gosu");
x.t("mode","wsdl");
x.t("mode","focus");
x.t("mode","called");
x.t("working","ws-i");
x.t("working","xml");
x.t("necessary","example");
x.t("basic","profile");
x.t("basic","authentication");
x.t("open","industry");
x.t("best","practices");
x.t("responses","digital");
x.t("responses","convenient");
x.t("responses","adding");
x.t("older","styles");
x.t("older","systems");
x.t("older","style");
x.t("payload","return");
x.t("sample","gosu");
x.t("change","wsdl");
x.t("type","example");
x.t("type","method");
x.t("type","examples.gosu.wsi.geocodeservice");
x.t("type","int");
x.t("type","suppose");
x.t("type","defined");
x.t("type","call");
x.t("evaluates","method");
x.t("introduction","xml");
x.t("external","web");
x.t("external","systems");
x.t("external","service");
x.t("calls","details");
x.t("calls","call");
x.t("calls","difficult");
x.t("hierarchy","web");
x.t("hierarchy","local");
x.t("hierarchy","xml");
x.t("hierarchy","called");
x.t("response","main");
x.t("response","asynchronous");
x.t("response","one-way");
x.t("root_package","wsdl_name_normalized");
x.t("explicitly","reference");
x.t("explicitly","choose");
x.t("packages","example.pl.gs.wsic.myservice.ports.report_p1");
x.t("public","free");
x.t("however","apis");
x.t("however","automatically");
x.t("however","worry");
x.t("http://www.agreatwebservice.com/greatwebservice","wsdl");
x.t("multiple","method");
x.t("multiple","ports");
x.t("service.doaction","package");
x.t("form","example");
x.t("followed","underscore");
x.t("followed","port");
x.t("(94114)","print");
x.t("r.description","depending");
x.t("apis","available");
x.t("apis","built-in");
x.t("apis","external");
x.t("apis","need");
x.t("apis","navigate");
x.t("apis","gosu");
x.t("apis","ws-i");
x.t("apis","omitted");
x.t("apis","cases");
x.t("automatically","transparently");
x.t("automatically","feature");
x.t("automatically","processes");
x.t("lowercase","name");
x.t("lowercase","myservice");
x.t("text","gosu");
x.t("property","inserts");
x.t("property","list");
x.t("property","gosu");
x.t("default","lists");
x.t("default","port");
x.t("examples.gosu.wsi.geocodeservice","create");
x.t("removes","duplicate");
x.t("require","authentication");
x.t("link","directly");
x.t("among","diverse");
x.t("diverse","systems");
x.t("advanced","web");
x.t("differences","ws-i");
x.t("bulk","incoming");
x.t("rpce","web");
x.t("want","new");
x.t("new","instance");
x.t("new","file");
x.t("new","ws.weather.weather");
x.t("new","url");
x.t("new","address");
x.t("new","ws.myservice.root");
x.t("new","types");
x.t("new","example.pl.gs.wsic.myservice.sayhello");
x.t("new","my.package.xsdname.elements.address");
x.t("new","ws.myservice.sayhello");
x.t("objects","gosu");
x.t("objects","instances");
x.t("details","web");
x.t("details","automatic");
x.t("details","normalization");
x.t("details","asynchronous");
x.t("access","discussion");
x.t("contents","yourschema.xsd");
x.t("element","method");
x.t("element","exist");
x.t("element","name=");
x.t("element","type");
x.t("element","list");
x.t("element","name");
x.t("element","gosu");
x.t("element","web");
x.t("element","request");
x.t("element","hide");
x.t("element","simply");
x.t("element","nodes");
x.t("element","information");
x.t("element","based");
x.t("element","contains");
x.t("speaking","gosu");
x.t("prefix","example");
x.t("single","argument");
x.t("single","xml");
x.t("includes","complete");
x.t("includes","xml");
x.t("includes","consuming");
x.t("compliant","web");
x.t("document","method");
x.t("document","wsdl");
x.t("document","gosu");
x.t("document","web");
x.t("document","outer");
x.t("document","literal");
x.t("document","whose");
x.t("document","xsd");
x.t("document","contains");
x.t("closely","related");
x.t("hierarchies","just");
x.t("hierarchies","include");
x.t("size","list");
x.t("messsage","gosu");
x.t("profiles","standards");
x.t("standards","web");
x.t("standards","ws-i");
x.t("standards","alternative");
x.t("security","standards");
x.t("security","requirements");
x.t("security","authentication");
x.t("security","wss4j");
x.t("file","looks");
x.t("file","directly");
x.t("file","wsdl");
x.t("file","different");
x.t("file","system");
x.t("file","loc");
x.t("file","class");
x.t("http","non-soap");
x.t("need","worry");
x.t("need","transfer");
x.t("/schema","note");
x.t("list","exist");
x.t("list","however");
x.t("list","property");
x.t("list","gosu");
x.t("list","addresses");
x.t("list","zero");
x.t("list","exists");
x.t("list","equivalent");
x.t("list","index");
x.t("list","upon");
x.t("list","list-based");
x.t("able","service");
x.t("organization","promotes");
x.t("notably","encoding");
x.t("complete","xml");
x.t("complete","xsd");
x.t("endpoint","url");
x.t("add","wsdl");
x.t("add","additional");
x.t("assign","list");
x.t("assignment","insertion");
x.t("guide","gosu");
x.t("guide","calling");
x.t("api","calls");
x.t("api","parameters");
x.t("api","methods");
x.t("api","types");
x.t("api","consumer");
x.t("api","call");
x.t("api","var");
x.t("practices","web");
x.t("results","older");
x.t("validate","xml");
x.t("simple","type");
x.t("simple","inner");
x.t("check","later");
x.t("example.pl.gs.wsic","gosu");
x.t("assume","web");
x.t("assume","first");
x.t("hellop2","gosu");
x.t("remove","hello");
x.t("ws.weather.weather","var");
x.t("soap","fault");
x.t("soap","response");
x.t("soap","apis");
x.t("soap","libraries");
x.t("soap","1.1");
x.t("soap","1.2");
x.t("soap","client");
x.t("soap","message");
x.t("soap","additional");
x.t("overview","important");
x.t("overview","adding");
x.t("features","operation");
x.t("features","call");
x.t("(xsds)","web");
x.t("(xsds)","imports");
x.t("url","http://wsf.cdyne.com/weatherws/weather.asmx");
x.t("url","urlstr");
x.t("url","web");
x.t("example.pl.gs.wsic.myservice","name");
x.t("xml-related","gosu");
x.t("echo","api");
x.t("duplicate","gosu");
x.t("duplicate","service");
x.t("navigate","xml");
x.t("directly","file");
x.t("directly","manipulate");
x.t("directly","page");
x.t("directly","values");
x.t("directly","class");
x.t("industry-wide","best");
x.t("test","purposes");
x.t("requires","support");
x.t("requires","understand");
x.t("requirements","gosu");
x.t("declare","root");
x.t("learning","gosu");
x.t("true","size");
x.t("converts","elements");
x.t("text_val.focus","text_val.select");
x.t("libraries","gosu");
x.t("name","root");
x.t("name","example");
x.t("name","followed");
x.t("name","element");
x.t("name","gosu");
x.t("name","async_");
x.t("name","transformations");
x.t("name","address");
x.t("name","natural");
x.t("name","ws-i");
x.t("name","myservice");
x.t("name","constructing");
x.t("name","happens");
x.t("name","port");
x.t("name","package");
x.t("name","service");
x.t("path","root_package");
x.t("path","file");
x.t("stored","run");
x.t("cryptographically","signed");
x.t("no","arguments");
x.t("no","soap");
x.t("no","value");
x.t("no","authentication");
x.t("operation","example");
x.t("operation","method");
x.t("operation","defines");
x.t("operation","action");
x.t("operation","definition");
x.t("operation","gosu");
x.t("operation","web");
x.t("operation","request");
x.t("resulting","xml");
x.t("common","types");
x.t("creating","xml");
x.t("http://wsf.cdyne.com/weatherws/weather.asmx","wsdl");
x.t("definition","uses");
x.t("definition","itself");
x.t("gosu","supports");
x.t("gosu","method");
x.t("gosu","community");
x.t("gosu","creates");
x.t("gosu","working");
x.t("gosu","type");
x.t("gosu","default");
x.t("gosu","automatically");
x.t("gosu","removes");
x.t("gosu","objects");
x.t("gosu","remove");
x.t("gosu","directly");
x.t("gosu","converts");
x.t("gosu","gosu");
x.t("gosu","handles");
x.t("gosu","provides");
x.t("gosu","sends");
x.t("gosu","web");
x.t("gosu","three");
x.t("gosu","chooses");
x.t("gosu","hides");
x.t("gosu","syntax");
x.t("gosu","first");
x.t("gosu","function");
x.t("gosu","language");
x.t("gosu","xml");
x.t("gosu","calling");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","documentation");
x.t("gosu","--");
x.t("gosu","process");
x.t("gosu","convention");
x.t("gosu","generated");
x.t("gosu","exposes");
x.t("gosu","ignores");
x.t("gosu","treats");
x.t("gosu","prefers");
x.t("gosu","call");
x.t("gosu","offers");
x.t("gosu","class");
x.t("gosu","using");
x.t("gosu","serializes");
x.t("gosu","imports");
x.t("gosu","tester");
x.t("gosu","extract");
x.t("wsdl","looks");
x.t("wsdl","defines");
x.t("wsdl","files");
x.t("wsdl","within");
x.t("wsdl","describes");
x.t("wsdl","refers");
x.t("wsdl","introduction");
x.t("wsdl","root_package");
x.t("wsdl","document");
x.t("wsdl","includes");
x.t("wsdl","file");
x.t("wsdl","assume");
x.t("wsdl","directly");
x.t("wsdl","learning");
x.t("wsdl","stored");
x.t("wsdl","gosu");
x.t("wsdl","references");
x.t("wsdl","identified");
x.t("wsdl","web");
x.t("wsdl","second");
x.t("wsdl","notice");
x.t("wsdl","suppose");
x.t("wsdl","next");
x.t("wsdl","define");
x.t("wsdl","capitalization");
x.t("wsdl","xml");
x.t("wsdl","types");
x.t("wsdl","comprises");
x.t("wsdl","named");
x.t("wsdl","--");
x.t("wsdl","rpc");
x.t("wsdl","port");
x.t("wsdl","package");
x.t("wsdl","//");
x.t("wsdl","using");
x.t("wsdl","xsd");
x.t("corresponds","package");
x.t("clients","port");
x.t("exactly","service");
x.t("references","xsd");
x.t("addresses","following");
x.t("handles","common");
x.t("handles","aspects");
x.t("handles","asynchronous");
x.t("argument","root");
x.t("argument","type");
x.t("argument","argument");
x.t("argument","types");
x.t("argument","return");
x.t("argument","contains");
x.t("similarity","name");
x.t("transparently","converting");
x.t("synchronous","request");
x.t("part","package");
x.t("bytes","text");
x.t("declares","element");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","method");
x.t("methods","support");
x.t("methods","gosu");
x.t("methods","wsdl");
x.t("methods","synchronous");
x.t("methods","indicate");
x.t("methods","natural");
x.t("methods","separately");
x.t("methods","mtom");
x.t("methods","send");
x.t("methods","defined");
x.t("methods","asynchronous");
x.t("methods","one-way");
x.t("methods","special");
x.t("provides","ability");
x.t("provides","weather");
x.t("provides","several");
x.t("parameters","return");
x.t("parameters","internally");
x.t("inner","xml");
x.t("urlstr","http://www.agreatwebservice.com/greatwebservice");
x.t("urlstr","new");
x.t("urlstr","url");
x.t("secondary","schema");
x.t("shortcut","aware");
x.t("zero","[0]");
x.t("exists","creating");
x.t("report_reportp1","example.pl.gs.wsic.myservice.ports.report_hellop2");
x.t("profile","requires");
x.t("profile","baseline");
x.t("sign","incoming");
x.t("standard","supports");
x.t("standard","round");
x.t("standard","xml");
x.t("rpc/literal","instead");
x.t("place","gosu");
x.t("place","wsdl");
x.t("place","directory");
x.t("indicate","method");
x.t("namespace","example.pl.gs.wsic.myservice");
x.t("namespace","package");
x.t("namespace","var");
x.t("sends","resulting");
x.t("async_","prefix");
x.t("identified","either");
x.t("web","services");
x.t("web","service");
x.t("industry","organization");
x.t("consistent","reliable");
x.t("encoded","responses");
x.t("encoded","(rpce)");
x.t("encoded","special");
x.t("loading","ws-i");
x.t("transformations","gosu");
x.t("childelement","list");
x.t("address","xsd");
x.t("address","child");
x.t("address","element.address");
x.t("aspects","object");
x.t("downloads","using");
x.t("natural","form");
x.t("natural","gosu");
x.t("copies","wsdl");
x.t("copies","appropriate");
x.t("local","methods");
x.t("local","system");
x.t("string","urlstr");
x.t("string","loc");
x.t("int","xsd");
x.t("entire","request");
x.t("reliable","testable");
x.t("outgoing","data");
x.t("rely","xsds");
x.t("document-literal-encoded","soap");
x.t("second","long");
x.t("three","types");
x.t("round","trip");
x.t("ports","exist");
x.t("ports","within");
x.t("ports","subpackage");
x.t("ports","wsdl");
x.t("ports","gosu");
x.t("ports","different");
x.t("ports","port");
x.t("ports","called");
x.t("ports","cases");
x.t("understand","gosu");
x.t("manipulate","xml");
x.t("chooses","default");
x.t("resolution","necessary");
x.t("promotes","industry-wide");
x.t("preceding","sample");
x.t("request","response");
x.t("request","element");
x.t("request","xml");
x.t("request","finished");
x.t("request","immediately");
x.t("sayhello","service");
x.t("hides","complexity");
x.t("begin","service");
x.t("error","occurred");
x.t("separately","encrypt");
x.t("documents","industry-standard");
x.t("notice","wsdl");
x.t("raw","data");
x.t("equivalent","adding");
x.t("choices","gosu");
x.t("something","mostly");
x.t("syntax","method");
x.t("syntax","element.propertyname");
x.t("outer","message");
x.t("next","gosu");
x.t("suppose","method");
x.t("suppose","contents");
x.t("suppose","element");
x.t("suppose","add");
x.t("suppose","wsdl");
x.t("suppose","ports");
x.t("schemalocation=","yourschema.xsd");
x.t("intermediate","xml");
x.t("automatic","creation");
x.t("automatic","insertion");
x.t("ws-i","method");
x.t("ws-i","open");
x.t("ws-i","basic");
x.t("ws-i","older");
x.t("ws-i","compliant");
x.t("ws-i","standards");
x.t("ws-i","operation");
x.t("ws-i","wsdl");
x.t("ws-i","standard");
x.t("ws-i","web");
x.t("ws-i","client");
x.t("ws-i","configuration");
x.t("ws-i","rpc");
x.t("ws-i","service");
x.t("options","types");
x.t("options","process");
x.t("options","one-way");
x.t("focus","gosu");
x.t("command-line","web");
x.t("first","example");
x.t("first","evaluates");
x.t("first","long");
x.t("first","insertion");
x.t("long","string");
x.t("messages","adding");
x.t("1.1","soap");
x.t("1.1","clients");
x.t("1.1","ports");
x.t("1.1","port");
x.t("schemas","(xsds)");
x.t("schemas","wsdl");
x.t("schemas","xsd");
x.t("feature","significantly");
x.t("weather","public");
x.t("weather","wsdl");
x.t("weather","san");
x.t("weather","result");
x.t("mostly","sunny");
x.t("affects","appearance");
x.t("guidewire_selectall","var");
x.t("literal","mode");
x.t("literal","rpc/literal");
x.t("literal","despite");
x.t("literal","encoding");
x.t("wsdls","test");
x.t("1.2","avail");
x.t("1.2","version");
x.t("1.2","clients");
x.t("1.2","ports");
x.t("1.2","port");
x.t("ws.myservice.root","//");
x.t("number","date");
x.t("p1","p2");
x.t("sunny","request");
x.t("function","guidewire_selectall");
x.t("approach","notably");
x.t("web_service_name",".wsdl.resources");
x.t("hide","complexity");
x.t(".ports","service_and_port_name");
x.t("underscore","followed");
x.t("p2","service");
x.t("different","profiles");
x.t("different","part");
x.t("different","place");
x.t("different","names");
x.t("different","versions");
x.t("define","available");
x.t("define","various");
x.t("define","becomes");
x.t("define","structure");
x.t("define","port");
x.t("trip","methods");
x.t("normalization","gosu");
x.t("represents","format");
x.t("represents","xml");
x.t("represents","protocol");
x.t("insertion","lists");
x.t("insertion","true");
x.t("insertion","words");
x.t("whether","list");
x.t("words","syntax");
x.t("words","suppose");
x.t("processes","ports");
x.t("language","handles");
x.t("testable","apis");
x.t("requests","responses");
x.t("multi-step","mtom");
x.t("talk","published");
x.t("instead","document");
x.t("instead","gosu");
x.t("java.net.url","uses");
x.t("aware","assign");
x.t("index","equal");
x.t("index","assignment");
x.t("index","notation");
x.t("capitalization","conflict");
x.t("report","echo");
x.t("report","gosu");
x.t("handling","important");
x.t("xml","apis");
x.t("xml","objects");
x.t("xml","element");
x.t("xml","single");
x.t("xml","document");
x.t("xml","need");
x.t("xml","api");
x.t("xml","soap");
x.t("xml","features");
x.t("xml","definition");
x.t("xml","gosu");
x.t("xml","bytes");
x.t("xml","raw");
x.t("xml","schemas");
x.t("xml","validators");
x.t("xml","schema");
x.t("xml","sequence");
x.t("xml","data");
x.t("xml","restrictions");
x.t("xml","complexity");
x.t("release","topic");
x.t("release","however");
x.t("release","gosu");
x.t("mtom","attachments");
x.t("mtom","protocol");
x.t("encrypt","requests");
x.t("implementing","advanced");
x.t("format","element");
x.t("format","embedded");
x.t("directory","corresponds");
x.t("types","within");
x.t("types","security");
x.t("types","gosu");
x.t("types","wsdl");
x.t("types","web");
x.t("types","ws-i");
x.t("types","number");
x.t("types","return");
x.t("types","appear");
x.t("types","schema");
x.t("types","location");
x.t("types","defined");
x.t("types","based");
x.t("types","special");
x.t("types","service");
x.t("types","xsds");
x.t("types","setting");
x.t("reportp1","hellop2");
x.t("calling","ws-i");
x.t("important","xml");
x.t("big","differences");
x.t("describing","format");
x.t("added","ports");
x.t("omitted","example");
x.t("ws","new");
x.t("simply","sequence");
x.t("reference","guide");
x.t("reference","choices");
x.t("reference","service");
x.t("code","creates");
x.t("code","shows");
x.t("code","however");
x.t("code","details");
x.t("code","gosu");
x.t("code","similar");
x.t("code","import");
x.t("code","following");
x.t("code","//");
x.t("code","gets");
x.t("client","api");
x.t("client","code");
x.t("client","connections");
x.t("client","server");
x.t("task","optionally");
x.t("xsd:date","object");
x.t("consumer","gosu");
x.t("organizations","provides");
x.t("return","caller");
x.t("return","type");
x.t("return","results");
x.t("return","types");
x.t("return","value");
x.t("industry-standard","xsd");
x.t("asynchronously","asynchronous");
x.t("encodes","api");
x.t("validators","rely");
x.t("message","simple");
x.t("message","contains");
x.t("schema","files");
x.t("schema","element");
x.t("schema","documents");
x.t("schema","import");
x.t("schema","called");
x.t("schema","contained");
x.t("schema","xsd");
x.t("appear","example");
x.t("appear","once");
x.t("comprises","following");
x.t(".wsdl.resources","subdirectory");
x.t("xsd-types","gosu");
x.t("intermediary","elements");
x.t("embedded","wsdl");
x.t("embedded","xml");
x.t("despite","similarity");
x.t("documentation","ws-i");
x.t("java.io.file","//");
x.t("finished","asynchronous");
x.t("example.pl.gs.wsic.myservice.sayhello","//");
x.t("whose","schema");
x.t("upon","first");
x.t("occurred","messsage");
x.t("encryption","digital");
x.t("encryption","following");
x.t("myservice.wsdl","package");
x.t("myservice","becomes");
x.t("myservice","package");
x.t("shortcuts","referring");
x.t("constructing","gosu");
x.t("configuration","options");
x.t("interoperable","web");
x.t("discussion","later");
x.t("helloworld","assume");
x.t("instances","subclasses");
x.t("serialized","xsd:date");
x.t("include","method");
x.t("core","release");
x.t("convenient","standard");
x.t("main","data");
x.t("main","content");
x.t("value","list");
x.t("value","ws-i");
x.t("value","schema");
x.t("value","published");
x.t("additional","method");
x.t("additional","xsd");
x.t("represented","wsdl");
x.t("similar","following");
x.t("my.package.xsdname.elements.address","automatic");
x.t("named","report");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("several","different");
x.t("specific","remote");
x.t("specific","subclass");
x.t("--","details");
x.t("--","web");
x.t("--","define");
x.t("--","wsdl2gosu.fetch");
x.t("--","location");
x.t("--","load");
x.t("--","var");
x.t("/wsi/remote/greatwebservice","//");
x.t("wsdl2gosu.fetch","new");
x.t("signed","messages");
x.t("send","request");
x.t("ws.myservice.sayhello","//");
x.t("free","web");
x.t("san","francisco");
x.t("depending","weather");
x.t("import","web");
x.t("import","schemalocation=");
x.t("deserialization","basic");
x.t("baseline","interoperable");
x.t("native","ws-i");
x.t("process","attachments");
x.t("process","wsdl");
x.t("fetched","wsdl");
x.t("connections","gosu");
x.t("connections","standard");
x.t("convention","package");
x.t("generated","xsd-based");
x.t("type=","xsd:int");
x.t("ret","service.doaction");
x.t("xmlelement","instance");
x.t("xmlelement","specific");
x.t("xmlelement","class");
x.t("worry","example");
x.t("worry","whether");
x.t("exposes","property");
x.t("exposes","operation");
x.t("exposes","shortcuts");
x.t("geocodeservice","wsdl");
x.t("service_and_port_name","service_and_port_name");
x.t("service_and_port_name","service");
x.t("services","support");
x.t("services","bulk");
x.t("services","soap");
x.t("services","gosu");
x.t("services","wsdl");
x.t("services","consistent");
x.t("services","ws-i");
x.t("services","client");
x.t("services","encryption");
x.t("services","major");
x.t("services","interoperability");
x.t("services","called");
x.t("services","optionally");
x.t("services","service");
x.t("services","server");
x.t("systems","rpce");
x.t("systems","organizations");
x.t("systems","call");
x.t("authentication","security");
x.t("authentication","soap");
x.t("authentication","ws-i");
x.t("authentication","encryption");
x.t("styles","web");
x.t("conform","xsd");
x.t("valid","payload");
x.t("takes","no");
x.t("takes","argument");
x.t("represent","address");
x.t("represent","child");
x.t("[0]","array/list");
x.t("[0]","new");
x.t("[0]","childelement");
x.t("notation","property");
x.t("example.pl.gs.wsic.myservice.echo","gosu");
x.t("example.pl.gs.wsic.myservice.ports.report_hellop2","//");
x.t("hello","hierarchies");
x.t("francisco","var");
x.t("page","error");
x.t("separate","downloads");
x.t("major","downsides");
x.t("purposes","command-line");
x.t("purposes","describe");
x.t("location","file");
x.t("location","example.pl.gs.wsic.myservice.report");
x.t("context","change");
x.t("transfer","data");
x.t("nodes","graph");
x.t("sequence","five");
x.t("sequence","elements");
x.t("interoperability","among");
x.t("data","example");
x.t("data","method");
x.t("data","requires");
x.t("data","directly");
x.t("data","wsdl");
x.t("data","encoded");
x.t("data","xml");
x.t("data","rpc");
x.t("data","using");
x.t("becomes","lowercase");
x.t("becomes","valid");
x.t("internally","gosu");
x.t("information","xsd-based");
x.t("graph","automatically");
x.t("wsdl_name_normalized",".ports");
x.t("wsdl_name_normalized","normalized_service_name");
x.t("document/literal","document-literal-encoded");
x.t("appropriate","place");
x.t("defined","differently");
x.t("defined","no");
x.t("defined","wsdl");
x.t("defined","schemas");
x.t("defined","xsd");
x.t("non-soap","access");
x.t("happens","multiple");
x.t("happens","begin");
x.t("result","wsdl");
x.t("result","something");
x.t("ignores","soap");
x.t("asynchronous","api");
x.t("asynchronous","methods");
x.t("asynchronous","round");
x.t("downsides","approach");
x.t("published","no");
x.t("published","ws-i");
x.t("values","date");
x.t("significantly","improve");
x.t("called","doaction");
x.t("called","remote");
x.t("called","document");
x.t("called","operation");
x.t("called","sayhello");
x.t("called","p1");
x.t("called","report");
x.t("called","reportp1");
x.t("called","myservice.wsdl");
x.t("called","helloworld");
x.t("called","geocodeservice");
x.t("called","rpc");
x.t("called","yourschema.xsd");
x.t("procedure","calls");
x.t("procedure","call");
x.t("rpc","encoded");
x.t("rpc","literal");
x.t("rpc","encoding");
x.t("structure","wsdl");
x.t("structure","main");
x.t("port","example");
x.t("port","creates");
x.t("port","explicitly");
x.t("port","http");
x.t("port","soap");
x.t("port","name");
x.t("port","wsdl");
x.t("port","methods");
x.t("port","represents");
x.t("port","two");
x.t("port","service");
x.t("fully-qualified","type");
x.t("normalized_service_name","name");
x.t("normalized_service_name","normalized_service_name");
x.t("choose","port");
x.t("print","r.description");
x.t("protocol","mtom");
x.t("protocol","context");
x.t("note","element");
x.t("note","report_reportp1");
x.t("date","base64");
x.t("date","object");
x.t("readability","xml-related");
x.t("two","soap");
x.t("two","local");
x.t("two","services");
x.t("optionally","asynchronously");
x.t("optionally","returns");
x.t("wss4j","big");
x.t("(rpce)","web");
x.t("cases","gosu");
x.t("cases","wsdl");
x.t("treats","entire");
x.t("treats","index");
x.t("prefers","version");
x.t("based","name");
x.t("based","xsd-based");
x.t("itself","gosu");
x.t("call","method");
x.t("call","remote");
x.t("call","gosu");
x.t("call","methods");
x.t("call","web");
x.t("call","encoded");
x.t("call","services");
x.t("one-way","methods");
x.t("one-way","web");
x.t("incoming","responses");
x.t("incoming","outgoing");
x.t("package","examples.gosu.wsi");
x.t("package","hierarchy");
x.t("package","want");
x.t("package","hierarchies");
x.t("package","example.pl.gs.wsic");
x.t("package","name");
x.t("package","wsdl");
x.t("package","names");
x.t("immediately","return");
x.t("real","example");
x.t("real","apis");
x.t("xsd:int","/schema");
x.t("subclass","defined");
x.t("list-based","types");
x.t("service","example");
x.t("service","fetch");
x.t("service","defines");
x.t("service","organized");
x.t("service","apis");
x.t("service","require");
x.t("service","new");
x.t("service","includes");
x.t("service","security");
x.t("service","endpoint");
x.t("service","api");
x.t("service","overview");
x.t("service","soap");
x.t("service","url");
x.t("service","declare");
x.t("service","name");
x.t("service","wsdl");
x.t("service","gosu");
x.t("service","methods");
x.t("service","provides");
x.t("service","namespace");
x.t("service","web");
x.t("service","ports");
x.t("service","wsdls");
x.t("service","client");
x.t("service","represented");
x.t("service","data");
x.t("service","defined");
x.t("service","called");
x.t("service","fully-qualified");
x.t("service","real");
x.t("service","service");
x.t("service","following");
x.t("service","load");
x.t("service","var");
x.t("service","server");
x.t("service","contains");
x.t("service","service.helloworld");
x.t("service","generally");
x.t("offers","native");
x.t("following","sample");
x.t("following","packages");
x.t("following","features");
x.t("following","path");
x.t("following","wsdl");
x.t("following","gosu");
x.t("following","code");
x.t("following","schema");
x.t("following","services");
x.t("following","//");
x.t("signatures","cryptographically");
x.t("signatures","implementing");
x.t("style","web");
x.t("special","shortcut");
x.t("special","conform");
x.t("special","behavior");
x.t("system","place");
x.t("system","web");
x.t("system","fetched");
x.t("system","consume");
x.t("run","version");
x.t("yourschema.xsd","file");
x.t("yourschema.xsd","add");
x.t("yourschema.xsd","--");
x.t("elements","properties");
x.t("elements","multiple");
x.t("elements","gosu");
x.t("elements","xml");
x.t("elements","appear");
x.t("elements","represent");
x.t("elements","using");
x.t("contained","referenced");
x.t("either","soap");
x.t("example.pl.gs.wsic.myservice.report","example.pl.gs.wsic.myservice.echo");
x.t("individual","arguments");
x.t("using","name");
x.t("using","gosu");
x.t("using","xml");
x.t("using","code");
x.t("using","schema");
x.t("using","associated");
x.t("difficult","validate");
x.t("xsds","details");
x.t("xsds","define");
x.t("class","files");
x.t("class","hierarchy");
x.t("class","represents");
x.t("//","create");
x.t("//","duplicate");
x.t("//","reference");
x.t("//","--");
x.t("//","note");
x.t("//","call");
x.t("loc","path");
x.t("loc","first");
x.t("loc","/wsi/remote/greatwebservice");
x.t("setting","properties");
x.t("async_doaction","version");
x.t("conflict","resolution");
x.t("additionally","gosu");
x.t("additionally","port");
x.t("adding","element");
x.t("adding","ws-i");
x.t("xsd","files");
x.t("xsd","regular");
x.t("xsd","file");
x.t("xsd","wsdl");
x.t("xsd","gosu");
x.t("xsd","declares");
x.t("xsd","web_service_name");
x.t("xsd","define");
x.t("xsd","represents");
x.t("xsd","types");
x.t("xsd","describing");
x.t("xsd","embedded");
x.t("xsd","data");
x.t("alternative","encoding");
x.t("manually","fetch");
x.t("xsd-based","properties");
x.t("xsd-based","type");
x.t("xsd-based","names");
x.t("returns","no");
x.t("returns","result");
x.t("serializes","root");
x.t("ws.getcityweatherbyzip","(94114)");
x.t("load","wsdl");
x.t("load","web");
x.t("names","example");
x.t("names","lowercase");
x.t("names","different");
x.t("names","structure");
x.t("names","port");
x.t("operations","api");
x.t("child","element");
x.t("child","elements");
x.t("associated","xsd");
x.t("referring","child");
x.t("behavior","multiple");
x.t("var","new");
x.t("var","text_val=eval");
x.t("var","urlstr");
x.t("var","ws");
x.t("var","ret");
x.t("var","service");
x.t("var","loc");
x.t("var","ws.getcityweatherbyzip");
x.t("versions","soap");
x.t("describe","data");
x.t("notable","tips");
x.t("restrictions","extensions");
x.t("complexity","anything");
x.t("complexity","affects");
x.t("complexity","xml");
x.t("complexity","notable");
x.t("consume","external");
x.t("imports","wsdl");
x.t("imports","types");
x.t("element.address","property");
x.t("element.address","[0]");
x.t("object","serialization");
x.t("object","rather");
x.t("object","deserialization");
x.t("object","xmlelement");
x.t("consuming","ws-i");
x.t("server","fetch");
x.t("server","uses");
x.t("server","encodes");
x.t("encoding","gosu");
x.t("encoding","loading");
x.t("encoding","specific");
x.t("encoding","document/literal");
x.t("encoding","called");
x.t("content","ws-i");
x.t("contains","method");
x.t("contains","complete");
x.t("contains","simple");
x.t("contains","exactly");
x.t("contains","xml");
x.t("contains","child");
x.t("contains","complexity");
x.t("tester","security");
x.t("service.helloworld","course");
x.t("generally","speaking");
x.t("gets","weather");
x.t("extract","individual");
}

function FileData_Pairs(x)
{
x.t("example","implement");
x.t("example","shows");
x.t("example","change");
x.t("example","want");
x.t("example","approach");
x.t("example","simply");
x.t("example","test-only");
x.t("example","encryption");
x.t("example","//");
x.t("example","transform");
x.t("example","object");
x.t("method","method");
x.t("method","service");
x.t("method","returns");
x.t("method","transform");
x.t("properties","add");
x.t("properties","name");
x.t("properties","wsdl");
x.t("properties","object");
x.t("fortunately","typical");
x.t("exist","makes");
x.t("creation","intermediary");
x.t("construct","xml");
x.t("gw.testharness.testbase","uses");
x.t("digital","signature");
x.t("digital","signatures");
x.t("just","soap");
x.t("just","instantiate");
x.t("serialization","settings");
x.t("serialization","options");
x.t("serialization","option");
x.t("anything","needs");
x.t("defines","static");
x.t("30000","//");
x.t("full","information");
x.t("implement","whatever");
x.t("implement","encryption");
x.t("implement","transform");
x.t("needs","transform");
x.t("sufficient","need");
x.t("pretty","printing");
x.t("static","method");
x.t("static","instance");
x.t("static","variable");
x.t("static","var");
x.t("envelopes","type");
x.t("various","serialization");
x.t("instance","character");
x.t("layer","followed");
x.t("gw.xml.ws","uses");
x.t("apply","transforma");
x.t("keystore","standard");
x.t("user","name");
x.t("line","sepa");
x.t("uses","gw.testharness.testbase");
x.t("uses","java.nio.charset.charset");
x.t("uses","org.xml.sax.saxparseexception");
x.t("uses","java.io.inputstream");
x.t("uses","gw.testharness.runlevel");
x.t("uses","gw.util.streamutil");
x.t("uses","java.io.bytearrayinputstream");
x.t("shows","implement");
x.t("field","called");
x.t("reply","package");
x.t("text_val.select","link");
x.t("look","concise");
x.t("essentially","xml");
x.t("tions","stream");
x.t("support","wss");
x.t("type","response");
x.t("type","gw.xml.ws.wsdlconfig");
x.t("type","gw.xml.xmlserializationoptions");
x.t("type","java.util.arraylist");
x.t("type","except");
x.t("type","gw.xsd.w3c.soap12_envelope.envelope");
x.t("change","serialization");
x.t("change","authentication");
x.t("change","encoding");
x.t("basic","http");
x.t("basic","authentication");
x.t(".config.requestsoapheaders","property");
x.t("hierarchy","gosu");
x.t("calltimeout","property");
x.t("response","type");
x.t("response","external");
x.t("response","response");
x.t("response","need");
x.t("response","validate");
x.t("response","soap");
x.t("response","xml");
x.t("response","works");
x.t("response","code");
x.t("response","envelope");
x.t("response","responsetransform");
x.t("external","system");
x.t("initiate","first");
x.t("public","static");
x.t("streamutil.getcontent","bytes");
x.t("down","hierarchy");
x.t("multiple","types");
x.t("followed","digital");
x.t("17","byte");
x.t("property","user");
x.t("property","property");
x.t("property","soap");
x.t("property","gosu");
x.t("property","wsdlconfig");
x.t("property","several");
x.t("property","password");
x.t("property","contains");
x.t("really","think");
x.t("apis","implement");
x.t("apis","xmlelement");
x.t("apis","described");
x.t("default","xml");
x.t("default","utf-8");
x.t("transforma","tions");
x.t("require","getting");
x.t("require","transformations");
x.t("needed","wss4j");
x.t("requesttransform","property");
x.t("ws.config.requesttransform","wsitransformtestservice._xortransform");
x.t("ws.add","//");
x.t("link","directly");
x.t("new","uri");
x.t("new","wsi.myservice.wsitransformtestservice");
x.t("new","bytearrayinputstream");
x.t("new","operator");
x.t("new","example.gosu.wsi.myservice.sayhello");
x.t("access","response");
x.t("access","options");
x.t("access","headers");
x.t("objects","fortunately");
x.t("objects","generics");
x.t("objects","represent");
x.t("think","difference");
x.t("jms","service.config.http.authentication.basic.password");
x.t("want","add");
x.t("want","read");
x.t("element","sorting");
x.t("element","using");
x.t("getting","response");
x.t("getting","xmlserializationoptions");
x.t("getting","bytes");
x.t("advanced","security");
x.t("advanced","web");
x.t("cation","security");
x.t("signature","keystore");
x.t("signature","encrypted");
x.t("signature","different");
x.t("signature","encryption");
x.t("30","seconds");
x.t("xmlserializationoptions","property");
x.t("printing","line");
x.t("includes","support");
x.t("block","anything");
x.t("block","implements");
x.t("block","takes");
x.t("messsage","gosu");
x.t("need","really");
x.t("need","first");
x.t("need","customize");
x.t("need","encryption");
x.t("need","send");
x.t("security","add");
x.t("security","soap");
x.t("security","settings");
x.t("security","parameters");
x.t("security","standard");
x.t("security","options");
x.t("security","layers");
x.t("security","wss4j");
x.t("http","basic");
x.t("http","headers");
x.t("http","authentication");
x.t("list","xml");
x.t("list","xmlelement");
x.t("list","location");
x.t("generics","notation");
x.t("gw.xml.ws.asyncresponse","object");
x.t("uri","http://testingserver/xx");
x.t("utilities","needed");
x.t("outbound","security");
x.t("again","decodes");
x.t("add","change");
x.t("add","advanced");
x.t("add","simple");
x.t("add","soap");
x.t("add","transformation");
x.t("add","additional");
x.t("add","xmlelement");
x.t("add","authentication");
x.t("guide","http");
x.t("guide","easiest");
x.t("guide","calling");
x.t("api","just");
x.t("api",".config.requestsoapheaders");
x.t("api","new");
x.t("api","sets");
x.t("api","request");
x.t("api","syntax");
x.t("api","options");
x.t("api",".config.http.authentication.basic");
x.t("api","reference");
x.t("api","already");
x.t("api","call");
x.t("api","object");
x.t("simple","example");
x.t("simple","http");
x.t("java.nio.charset.charset","//");
x.t("authenti","cation");
x.t("validate","digital");
x.t("applies","transform");
x.t("gw.xml.ws.wsdlconfig","wsdl");
x.t("xml-related","code");
x.t("soap","http");
x.t("soap","api");
x.t("soap","request");
x.t("soap","headers");
x.t("soap","1.1");
x.t("soap","1.2");
x.t("soap","client");
x.t("soap","header");
x.t("soap","envelope");
x.t("soap","server");
x.t("url","example");
x.t("url","override");
x.t("rators","element");
x.t("remember","order");
x.t("directly","modifying");
x.t("directly","page");
x.t("desired","static");
x.t("desired","user");
x.t("byte","simple");
x.t("byte","stream");
x.t("byte","//");
x.t("exclusive","transformation");
x.t("test","request");
x.t("_xortransform","inputstream");
x.t("_xortransform","transformation");
x.t("text_val.focus","text_val.select");
x.t("settings","full");
x.t("settings","sufficient");
x.t("settings","getting");
x.t("settings","common");
x.t("settings","web");
x.t("settings","wsdlconfig");
x.t("path","follows");
x.t("name","password");
x.t("name","object");
x.t("no","equivalent");
x.t("responseenvelope","property");
x.t("common","serialization");
x.t("connects","web");
x.t("org.xml.sax.saxparseexception","@runlevel");
x.t("@runlevel","none");
x.t("gosu","block");
x.t("gosu","xml");
x.t("gosu","reference");
x.t("gosu","adds");
x.t("gosu","takes");
x.t("gosu","adding");
x.t("wsdl","configuration");
x.t("wsdl","var");
x.t("follows","web");
x.t("follows","suppose");
x.t("wsi.myservice.wsitransformtestservice","ws.config.requesttransform");
x.t("custom","soap");
x.t("custom","headers");
x.t("bytes","digital");
x.t("bytes","streamutil.getcontent");
x.t("bytes","stream");
x.t("bytes","index");
x.t("bytes","idx");
x.t("bytes","typical");
x.t("bytes","following");
x.t("bytes","applying");
x.t("argument","returns");
x.t("declares","gosu");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","no");
x.t("methods","//");
x.t("parameters","following");
x.t("http://testingserver/xx","//");
x.t("alternatively","transformations");
x.t("inputstream","argument");
x.t("inputstream","inputstream");
x.t("inputstream","var");
x.t("none","class");
x.t("namespace","wsdl");
x.t("makes","xml-related");
x.t("transformed","bytes");
x.t("standard","outbound");
x.t("standard","approach");
x.t("web","services");
x.t("web","service");
x.t("modifying","wsdl");
x.t("modifying","options");
x.t("gw.xml.xmlserializationoptions","modify");
x.t("easiest","appropriate");
x.t("transformations","require");
x.t("transformations","remember");
x.t("transformations","understand");
x.t("encrypted","xml");
x.t("wsitransformtestservice._xortransform","ws.add");
x.t("wsitransformtestservice._xortransform","ws.config.responsetransform");
x.t("sets","encoding");
x.t("transformation","again");
x.t("transformation","byte");
x.t("transformation","outgoing");
x.t("transformation","package");
x.t("bytearrayinputstream","bytes");
x.t("subobjects","defined");
x.t("outgoing","request");
x.t("outgoing","requests");
x.t("stream","example");
x.t("stream","block");
x.t("stream","bytes");
x.t("stream","inputstream");
x.t("stream","begin");
x.t("stream","incrementally");
x.t("stream","code");
x.t("stream","data");
x.t("understand","response");
x.t("input","stream");
x.t("request","basic");
x.t("request","response");
x.t("request","initiate");
x.t("request","apis");
x.t("request","require");
x.t("request","requesttransform");
x.t("request","soap");
x.t("request","following");
x.t("request","class");
x.t("request","transform");
x.t("(get)","soap");
x.t("begin","output");
x.t("error","occurred");
x.t("equivalent","api");
x.t("serveroverrideurl","property");
x.t("something","default");
x.t("whatever","additional");
x.t("syntax","api.config");
x.t("syntax","authentication");
x.t("intermediate","xml");
x.t("automatic","creation");
x.t("suppose","api");
x.t("b5","//");
x.t("next","add");
x.t("java.util.arraylist","xmlelement");
x.t("representation","xml");
x.t("decrypt","response");
x.t("ws-i","web");
x.t("ws-i","configuration");
x.t("options","api");
x.t("options","web");
x.t("options","function");
x.t("options","send");
x.t("options","beyond");
x.t("options","service");
x.t("options","adding");
x.t("options","object");
x.t("options","encoding");
x.t("concise","automatic");
x.t(".config.http.authentication.basic","object");
x.t("headers","essentially");
x.t("headers","external");
x.t("headers","response");
x.t("headers","access");
x.t("headers","soap");
x.t("headers","request");
x.t("headers","header");
x.t("headers","authentication");
x.t("headers","server");
x.t("first","construct");
x.t("first","decrypt");
x.t("1.1","type");
x.t("testtransform","var");
x.t("guidewire_selectall","var");
x.t("1.2","envelopes");
x.t("soap11","instead");
x.t("java.net.uri","object");
x.t("side","add");
x.t("function","testtransform");
x.t("function","guidewire_selectall");
x.t("soap12","name");
x.t("approach","may");
x.t("approach","implementing");
x.t("implements","service");
x.t("implements","transform");
x.t("straightforward","syntax");
x.t("customize","settings");
x.t("may","multiple");
x.t("different","output");
x.t("decodes","request");
x.t("wsdlconfig","object");
x.t("instead","soap12");
x.t("instead","simply");
x.t("requests","apply");
x.t("requests","reply");
x.t("index","idx");
x.t("xml","serialization");
x.t("xml","response");
x.t("xml","apis");
x.t("xml","objects");
x.t("xml","element");
x.t("xml","data");
x.t("xml","character");
x.t("xml","elements");
x.t("xml","serializes");
x.t("xml","object");
x.t("types","property");
x.t("types","authenti");
x.t("types","transformations");
x.t("internal","representation");
x.t("implementing","advanced");
x.t("implementing","additional");
x.t("calling","ws-i");
x.t("api.config","property");
x.t("simply","straightforward");
x.t("simply","running");
x.t("works","asynchronous");
x.t("important","example");
x.t("added","digital");
x.t("ws","new");
x.t("reference","example");
x.t("reference","guide");
x.t("reference","soap");
x.t("reference","value");
x.t("reference","takes");
x.t("reference","service");
x.t("reference","following");
x.t("code","look");
x.t("code","need");
x.t("code","connects");
x.t("code","implements");
x.t("code","actually");
x.t("test-only","configuration");
x.t("client","request");
x.t("client","side");
x.t("incrementally","process");
x.t("instantiate","service");
x.t("adds","intermediate");
x.t("override","url");
x.t("override","server");
x.t("return","response");
x.t("return","new");
x.t("previous","example");
x.t("intermediary","elements");
x.t("header","property");
x.t("header","authentication");
x.t("option","changing");
x.t("variable","called");
x.t("variable","contains");
x.t("envelope","access");
x.t("envelope","web");
x.t("envelope","result");
x.t("actual","xml");
x.t("sorting","exporting");
x.t("java","utility");
x.t("java.io.inputstream","class");
x.t("occurred","messsage");
x.t("encryption","digital");
x.t("encryption","layer");
x.t("encryption","alternatively");
x.t("encryption","return");
x.t("encryption","authentication");
x.t("encryption","similarly");
x.t("service.config.http.authentication.basic.username","jms");
x.t("changing","character");
x.t("service.config.xmlserializationoptions.encoding","charset.forname");
x.t("gw.testharness.runlevel","uses");
x.t("configuration","serveroverrideurl");
x.t("configuration","options");
x.t("configuration","object");
x.t("subtopics","describe");
x.t("instantiated","new");
x.t("username","property");
x.t("exporting","xml");
x.t("layers","example");
x.t("layers","outgoing");
x.t("layers","java");
x.t("layers","encryption");
x.t("wsitransformservice","//");
x.t("value","property");
x.t("value","milliseconds");
x.t("additional","apis");
x.t("additional","security");
x.t("additional","soap");
x.t("additional","layers");
x.t("running","transformation");
x.t("idx","17");
x.t("idx","bytes");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("several","levels");
x.t("already","exist");
x.t("already","instantiated");
x.t("send","soap");
x.t("send","additional");
x.t("gw.util.streamutil","uses");
x.t("xmlelement","objects");
x.t("xmlelement","subobjects");
x.t("xmlelement","next");
x.t("xmlelement","read");
x.t("xmlelement","object");
x.t("encoding_name","static");
x.t("process","bytes");
x.t("actually","implements");
x.t("services","gosu");
x.t("authentication","digital");
x.t("authentication","security");
x.t("authentication","add");
x.t("authentication","api");
x.t("authentication","additional");
x.t("authentication","optional");
x.t("authentication","object");
x.t("read","(get)");
x.t("read","additional");
x.t("notation","type");
x.t("represent","headers");
x.t("takes","input");
x.t("takes","java.net.uri");
x.t("takes","internal");
x.t("page","error");
x.t("location","api");
x.t("output","transformed");
x.t("output","stream");
x.t("wss","security");
x.t("typical","default");
x.t("typical","code");
x.t("service.config.calltimeout","30000");
x.t("attached","soap");
x.t("data","gosu");
x.t("data","bytes");
x.t("data","stream");
x.t("data","request");
x.t("data","actual");
x.t("data","similarly");
x.t("information","xml");
x.t("optional","soap");
x.t("defined","xml");
x.t("xsd-generated","types");
x.t("timeout","value");
x.t("timeout","timeout");
x.t("result","asynchronous");
x.t("appropriate","character");
x.t("chinese","encoding");
x.t("big5","uses");
x.t("big5","//");
x.t("responsetransform","property");
x.t("ws.config.responsetransform","wsitransformtestservice._xortransform");
x.t("api.helloworld","directly");
x.t("values","desired");
x.t("asynchronous","api");
x.t("asynchronous","soap");
x.t("asynchronous","methods");
x.t("charset.forname","encoding_name");
x.t("charset.forname","big5");
x.t("utility","includes");
x.t("utility","wss4j");
x.t("called","api");
x.t("called","_xortransform");
x.t("described","asynchronous");
x.t("character","encoding");
x.t("character","object");
x.t("sepa","rators");
x.t("beyond","http");
x.t("xor","exclusive");
x.t("xor","encryption");
x.t("java.io.bytearrayinputstream","uses");
x.t("note","xsd-generated");
x.t("two","values");
x.t("milliseconds","calltimeout");
x.t("indent","levels");
x.t("itself","xml");
x.t("based","xmlelement");
x.t("obligated","return");
x.t("wss4j","security");
x.t("wss4j","utilities");
x.t("wss4j","utility");
x.t("call","method");
x.t("call","gw.xml.ws.asyncresponse");
x.t("call","methods");
x.t("package","gw.xml.ws");
x.t("package","namespace");
x.t("utf-8","change");
x.t("order","important");
x.t("service","new");
x.t("service","need");
x.t("service","security");
x.t("service","add");
x.t("service","applies");
x.t("service","test");
x.t("service","modifying");
x.t("service","request");
x.t("service","api.helloworld");
x.t("service","package");
x.t("service","object");
x.t("service","service.helloworld");
x.t("signatures","example");
x.t("signatures","just");
x.t("signatures","want");
x.t("signatures","types");
x.t("following","simple");
x.t("following","declares");
x.t("following","code");
x.t("following","subtopics");
x.t("elements","gosu");
x.t("elements","already");
x.t("elements","attached");
x.t("system","add");
x.t("system","custom");
x.t("system","added");
x.t("except","soap11");
x.t("//","30");
x.t("//","reference");
x.t("//","xor");
x.t("//","call");
x.t("//","following");
x.t("service.config.http.authentication.basic.password","b5");
x.t("setting","xml");
x.t("setting","timeout");
x.t("using","gosu");
x.t("similarly","getting");
x.t("similarly","transform");
x.t("class","defines");
x.t("class","wsitransformservice");
x.t("class","wsitransform");
x.t("adding","ws-i");
x.t("levels","pretty");
x.t("levels","down");
x.t("password","example");
x.t("password","property");
x.t("password","two");
x.t("password","object");
x.t("serializes","data");
x.t("returns","desired");
x.t("returns","input");
x.t("operator","properties");
x.t("modify","properties");
x.t("transform","response");
x.t("transform","public");
x.t("transform","byte");
x.t("transform","follows");
x.t("transform","input");
x.t("transform","outgoing");
x.t("transform","automatic");
x.t("transform","data");
x.t("transform","xor");
x.t("applying","digital");
x.t("var","api");
x.t("var","_xortransform");
x.t("var","bytes");
x.t("var","text_val=eval");
x.t("var","ws");
x.t("var","service");
x.t("example.gosu.wsi.myservice.sayhello","service.config.http.authentication.basic.username");
x.t("example.gosu.wsi.myservice.sayhello","service.config.xmlserializationoptions.encoding");
x.t("example.gosu.wsi.myservice.sayhello","service.config.calltimeout");
x.t("example.gosu.wsi.myservice.sayhello","//");
x.t("example.gosu.wsi.myservice.sayhello","service.config.serveroverrideurl");
x.t("describe","wsdlconfig");
x.t("service.config.serveroverrideurl","new");
x.t("object","example");
x.t("object","properties");
x.t("object","various");
x.t("object","type");
x.t("object","access");
x.t("object","list");
x.t("object","api");
x.t("object","url");
x.t("object","path");
x.t("object","responseenvelope");
x.t("object","headers");
x.t("object","previous");
x.t("object","variable");
x.t("object","username");
x.t("object","note");
x.t("object","itself");
x.t("object","based");
x.t("object","call");
x.t("object","service");
x.t("object","object");
x.t("object","encoding");
x.t("contains","field");
x.t("contains","list");
x.t("contains","api");
x.t("difference","instead");
x.t("service.helloworld","api");
x.t("service.helloworld","custom");
x.t("service.helloworld","setting");
x.t("seconds","//");
x.t("gw.xsd.w3c.soap12_envelope.envelope","soap");
x.t("server","url");
x.t("server","gosu");
x.t("server","override");
x.t("server","obligated");
x.t("encoding","outgoing");
x.t("encoding","something");
x.t("encoding","implementing");
x.t("encoding","chinese");
x.t("encoding","big5");
x.t("encoding","charset.forname");
x.t("encoding","indent");
x.t("wsitransform","function");
}

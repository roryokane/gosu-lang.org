function FileData_Pairs(x)
{
x.t("example","suppose");
x.t("example","first");
x.t("example","using");
x.t("complex","example");
x.t("complex","hard");
x.t("looks","following");
x.t("looks","special");
x.t("root",":test3");
x.t("root","var");
x.t("creation","function");
x.t("creation","expression");
x.t("construct","instance");
x.t("determined","programming");
x.t("determined","context");
x.t("method","argument");
x.t("method","predetermined");
x.t("doaction","method");
x.t("doaction","arg1");
x.t("age","class");
x.t("properties","part");
x.t("properties","separate");
x.t("properties","object");
x.t("combined","data");
x.t("hashmap","java");
x.t("version","looks");
x.t("claim",":claimid");
x.t("clear","object");
x.t("lists","basic");
x.t("lists","collections");
x.t("create","instance");
x.t("create","new");
x.t("_name","string");
x.t("_age","int");
x.t("expressing","nested");
x.t("tree","xml");
x.t("simpletest.test2s.add","new");
x.t("simpletest.test2s.add","(test2)");
x.t("instance","method");
x.t("instance","hashmap");
x.t("instance","type");
x.t("required","characters");
x.t("variables","class");
x.t("testid","syntax");
x.t("name/value","pair");
x.t("name/value","pairs");
x.t("enum","class");
x.t("arguments","new");
x.t("arguments","constructor");
x.t("arguments","//");
x.t("java.util.hashmap","(8)");
x.t("improve","readability");
x.t("simpletest","new");
x.t("simpletest",":id");
x.t("simpletest","simpletest.id");
x.t("sizeexpression","//");
x.t("creates","instance");
x.t("creates","string");
x.t("12","members");
x.t("nature","xml");
x.t("uses","new");
x.t("uses","types");
x.t("declared","type");
x.t("pair","following");
x.t("hash","maps");
x.t("text_val.select","link");
x.t("statement","omits");
x.t("t.student","new");
x.t("t.student",":name");
x.t("smith",":age");
x.t(":update","true");
x.t(":whenmanifestonly","scriptenvironment.when_empty_skip");
x.t("type","construct");
x.t("type","determined");
x.t("type","type");
x.t("type","new");
x.t("type","simple");
x.t("type","name");
x.t("type","gosu");
x.t("type","argument");
x.t("type","omit");
x.t("type","array");
x.t("type","next");
x.t("type","java");
x.t("type","optionally");
x.t("type","class");
x.t("type","names");
x.t("type","var");
x.t("type","object");
x.t("brackekts","indicate");
x.t("open","curly");
x.t("close","brace");
x.t("expresses","nested");
x.t("basic","lists");
x.t("basic","hash");
x.t("explicitly","type");
x.t("colon","multiple");
x.t("multiple","properties");
x.t("multiple","name/value");
x.t("multiple","constructors");
x.t("followed","close");
x.t("property","declared");
x.t("property","name");
x.t("myfilecontainer.basedir","dir");
x.t("test2.id","test");
x.t("new","claim");
x.t("new","lists");
x.t("new","instance");
x.t("new","java.util.hashmap");
x.t("new","simpletest");
x.t("new","t.student");
x.t("new","javatype");
x.t("new","test");
x.t("new","test2");
x.t("new","omit");
x.t("new","string");
x.t("new","empty");
x.t("new","testtype");
x.t("new","my.company.filecontainer");
x.t("new","keyword");
x.t("new","xsd.test.testtype");
x.t("new","expression");
x.t("new","arraytype");
x.t("new","following");
x.t("new","//");
x.t("new","operator");
x.t("new","object");
x.t("link","directly");
x.t("objects","simple");
x.t("objects","choose");
x.t("objects","using");
x.t(":destfile","jarfile");
x.t("element","access");
x.t("access","value");
x.t("passes","arguments");
x.t("30","omitting");
x.t("simpletest.test2s.get","(1)");
x.t("messsage","gosu");
x.t("list","pass");
x.t("omits","type");
x.t("initialization","syntax");
x.t("infer","enum");
x.t("test1.number","simpletest.test4s.add");
x.t("assign","properties");
x.t("assign","variable");
x.t("assignment","statement");
x.t("assignment","variable");
x.t("during","assignment");
x.t("add","pairs");
x.t("jarfile","myfilecontainer.basedir");
x.t("jarfile",":basedir");
x.t(":color","red");
x.t("guide","gosu");
x.t("initialized","optionally");
x.t("simple","version");
x.t("simple","assignment");
x.t("simple","constructor");
x.t("simple","child");
x.t("_student","person");
x.t("propertyname","value");
x.t("scriptenvironment.when_empty_skip","instead");
x.t("scriptenvironment.when_empty_skip","case");
x.t("test1.color","red");
x.t(":age","30");
x.t("initializers","allow");
x.t("initializers","simplify");
x.t("initializers","compact");
x.t("simpletest.test3","blue");
x.t("collections","maps");
x.t("directly","return");
x.t("directly","page");
x.t("javatype","arguments");
x.t("declare","variable");
x.t("test","simpletest.test2s.add");
x.t("test","new");
x.t("test","function");
x.t("test","//");
x.t("imported","xsds");
x.t("sampleclaim","new");
x.t("commas","example");
x.t("true",":whenmanifestonly");
x.t("true","simpletest.test2s.get");
x.t("true",":test1");
x.t("true","myfilecontainer.whenmanifestonly");
x.t("informa","tion");
x.t("text_val.focus","text_val.select");
x.t("no","initial");
x.t("name","create");
x.t("name","colon");
x.t("name","new");
x.t("name","t.teacher");
x.t("name","private");
x.t("name","omitted");
x.t("name","context");
x.t("name","equals");
x.t("name","entirely");
x.t("name","//");
x.t("creating","new");
x.t("creating","xml");
x.t("test1","new");
x.t("gosu","uses");
x.t("gosu","type");
x.t("gosu","passes");
x.t("gosu","initialization");
x.t("gosu","infer");
x.t("gosu","operators");
x.t("gosu","reference");
x.t("gosu","class");
x.t("constructor","creation");
x.t("constructor","arguments");
x.t("constructor","open");
x.t("constructor","multiple");
x.t("constructor","call");
x.t("test2","test2.id");
x.t("test2","new");
x.t("test2","simpletest.test2s.get");
x.t("test2",":final");
x.t("test2",":id");
x.t("brackets","required");
x.t("brackets","indicate");
x.t("argument","doaction");
x.t("argument","type");
x.t("argument","t.doaction");
x.t("part","creating");
x.t(":test1","new");
x.t("initializing","lists");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("predetermined","//");
x.t("teacher","private");
x.t("useful","combined");
x.t("useful","naturally");
x.t("indicate","optional");
x.t("omit","type");
x.t("omit","new");
x.t("declarations","especially");
x.t("brace","add");
x.t("brace","constructor");
x.t("myfilecontainer","new");
x.t(":test3","blue");
x.t("myfilecontainer.whenmanifestonly","scriptenvironment.when_empty_skip");
x.t("(test1)","simpletest.test3");
x.t("array","12");
x.t("array","new");
x.t("array","three");
x.t("array","least");
x.t("string","creates");
x.t("string","new");
x.t("string","name");
x.t("string","array");
x.t("string","[12]");
x.t("string","//");
x.t("empty","string");
x.t("local","variables");
x.t("int","age");
x.t("allow","properties");
x.t("pairs","property");
x.t("pairs","commas");
x.t(".test1","new");
x.t("characters","new");
x.t("three","members");
x.t(":final","true");
x.t("simplify","code");
x.t("error","occurred");
x.t("sometimes","complex");
x.t("notice","property");
x.t("testtype",":color");
x.t("testtype",":test4s");
x.t("testtype","var");
x.t("tion","basic");
x.t("operators","expressions");
x.t("syntax","t.student");
x.t("syntax","simple");
x.t("syntax","propertyname");
x.t("syntax","initializing");
x.t("syntax","useful");
x.t("syntax","clearly");
x.t("syntax","rules");
x.t("syntax","nested");
x.t("syntax","general");
x.t("syntax","object");
x.t("members","initialized");
x.t("members","no");
x.t("next","assign");
x.t("hard","read");
x.t("compact","clear");
x.t("especially","useful");
x.t("suppose","following");
x.t("red",":number");
x.t("red","//");
x.t("exposed","type");
x.t("first","declare");
x.t("initializer","syntax");
x.t("my.company.filecontainer",":destfile");
x.t("my.company.filecontainer","myfilecontainer.destfile");
x.t(".final","true");
x.t("clearly","expresses");
x.t("guidewire_selectall","var");
x.t("constructors","defined");
x.t("function","doaction");
x.t("function","exposed");
x.t("function","guidewire_selectall");
x.t("t.teacher","new");
x.t("myfilecontainer.update","true");
x.t("expressions","new");
x.t("expressions","gosu");
x.t("expressions","function");
x.t("person","teacher");
x.t("person","private");
x.t("person","var");
x.t("person","student");
x.t("private","var");
x.t("words","assign");
x.t("dir",":update");
x.t("dir","myfilecontainer.update");
x.t("instead","naturally");
x.t("instead","object");
x.t("types","imported");
x.t("types","types");
x.t("types","numbers");
x.t("keyword","example");
x.t("keyword","improve");
x.t("keyword","type");
x.t("keyword","gosu");
x.t("xml","looks");
x.t("xml","objects");
x.t("xml","nodes");
x.t("xml","data");
x.t("initial","values");
x.t("omitted","new");
x.t("omitted","//");
x.t("(1)",".test1");
x.t("(1)",".final");
x.t("reference","guide");
x.t("code","following");
x.t("code","using");
x.t("code","var");
x.t("return","simpletest.toxml");
x.t("simpletest.toxml","instead");
x.t("simpletest.toxml","object");
x.t("least","constructor");
x.t("square","brackekts");
x.t("square","brackets");
x.t("(8)","creates");
x.t("xsd.test.testtype","test1.color");
x.t("java","type");
x.t("java","class");
x.t("variable","explicitly");
x.t("variable","new");
x.t("variable","specific");
x.t("variable","var");
x.t("occurred","messsage");
x.t("_teacher","person");
x.t("curly","add");
x.t("curly","brace");
x.t(":test2s","new");
x.t(":number","return");
x.t("rules","creating");
x.t("value","list");
x.t("value","directly");
x.t("value","notice");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","type");
x.t("simpletest.test4s.add","(test1)");
x.t("express","using");
x.t("[12]","creates");
x.t("programming","context");
x.t(":name","bob");
x.t("generated","xml");
x.t("valid","gosu");
x.t("expression","new");
x.t("expression","words");
x.t("expression","result");
x.t("expression","//");
x.t("read","type");
x.t(":basedir","dir");
x.t("clarifying","generated");
x.t("page","error");
x.t("context","method");
x.t("context","type");
x.t("context","omit");
x.t("separate","multiple");
x.t("nodes","clarifying");
x.t("optional","constructor");
x.t("optional","value");
x.t("data","example");
x.t("data","property");
x.t("data","structure");
x.t("information","object");
x.t("defined","case");
x.t("examples","expression");
x.t("result","new");
x.t("arg1","simpleobj");
x.t("t.doaction","new");
x.t("nested","nature");
x.t("nested","objects");
x.t("nested","object");
x.t("equals","values");
x.t("appropriate","test1.number");
x.t("case","new");
x.t("case","gosu");
x.t("case","syntax");
x.t("arrayvaluelist","//");
x.t("values","name/value");
x.t("values","followed");
x.t("values","new");
x.t("blue",":test2s");
x.t("blue","//");
x.t("arraytype","sizeexpression");
x.t("arraytype","arrayvaluelist");
x.t("choose","constructor");
x.t("simpleobj","class");
x.t("simpleobj","var");
x.t("structure","syntax");
x.t(":claimid","testid");
x.t(":test4s","new");
x.t("maps","informa");
x.t("maps","specialized");
x.t("specialized","initializer");
x.t("readability","creating");
x.t("note","gosu");
x.t("optionally","omit");
x.t("numbers","objects");
x.t("call","examples");
x.t("entirely","object");
x.t("immediately","new");
x.t("naturally","expressing");
x.t("naturally","express");
x.t("following","complex");
x.t("following","syntax");
x.t("following","code");
x.t("following","var");
x.t("xsd.test","var");
x.t("special","syntax");
x.t("class","variables");
x.t("class","new");
x.t("class","test");
x.t("class","array");
x.t("class","person");
x.t("class","java");
x.t("class","appropriate");
x.t("class","simpleobj");
x.t("class","tutoring");
x.t("class","var");
x.t("general","case");
x.t("//","create");
x.t("//","type");
x.t("//","during");
x.t("//","simple");
x.t("//","declare");
x.t("//","square");
x.t("//","note");
x.t("//","optionally");
x.t("//","class");
x.t("//","therefore");
x.t("using","local");
x.t("using","xsd.test");
x.t("using","xsd-based");
x.t("xsds","sometimes");
x.t("pass","arguments");
x.t("omitting","new");
x.t("xsd-based","types");
x.t(":id","root");
x.t(":id","test");
x.t("operator","create");
x.t("operator","gosu");
x.t("operator","syntax");
x.t("operator","valid");
x.t("therefore","omit");
x.t("tutoring","new");
x.t("tutoring","private");
x.t("names","information");
x.t("child","element");
x.t("var","_name");
x.t("var","_age");
x.t("var","simpletest");
x.t("var","new");
x.t("var","_student");
x.t("var","sampleclaim");
x.t("var","test1");
x.t("var","test2");
x.t("var","text_val=eval");
x.t("var","myfilecontainer");
x.t("var","string");
x.t("var","person");
x.t("var","_teacher");
x.t("var","data");
x.t("var","tutoring");
x.t("simpletest.id","root");
x.t("object","determined");
x.t("object","creation");
x.t("object","tree");
x.t("object","type");
x.t("object","initializers");
x.t("object","declarations");
x.t("object","initializer");
x.t("object","expressions");
x.t("object","immediately");
x.t("object","object");
x.t("student","//");
x.t("bob","smith");
x.t("myfilecontainer.destfile","jarfile");
x.t("(test2)","simpletest.test2s.add");
}

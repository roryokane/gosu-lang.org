function  WWHBookData_AddTOCEntries(P)
{
var A=P.fN("About This Document","1");
var B=A.fN("Downloads, Technical Questions, and Submitting Feedback","1#1329476");
B=A.fN("Conventions in This Document","1#1339027");
A=P.fN("Gosu Introduction","2");
B=A.fN("Welcome to Gosu","3");
var C=B.fN("Control Flow","3#1437383");
C=B.fN("Blocks","3#1469415");
C=B.fN("Enhancements","3#1435182");
C=B.fN("Collections","3#1441186");
C=B.fN("Access to Java Types","3#1435102");
C=B.fN("Gosu Classes and Properties","3#1440296");
C=B.fN("Interfaces","3#1450798");
C=B.fN("List and Array Expansion Operator *.","3#1450589");
C=B.fN("Comparisons","3#1452648");
C=B.fN("Case Sensitivity","3#1450590");
C=B.fN("Compound Assignment Statements","3#1454915");
C=B.fN("Delegating Interface Implementation with Composition","3#1457296");
C=B.fN("Concurrency","3#1456854");
C=B.fN("Exceptions","3#1457070");
C=B.fN("Annotations","3#1458452");
C=B.fN("Gosu Templates","3#1457886");
C=B.fN("XML and XSD Support","3#1460816");
C=B.fN("Web Service Support (Consuming WSDL)","3#1460937");
C=B.fN("Gosu Character Set","3#1484203");
B=A.fN("Running Gosu Programs and Calling Other Classes","4");
B=A.fN("More About the Gosu Type System","5");
C=B.fN("Compile Time Error Prevention","6");
C=B.fN("Type Inference","7");
C=B.fN("Intelligent Code Completion and Other Gosu Editor Tools","8");
C=B.fN("Null Safety for Properties and Other Operators","9");
C=B.fN("Generics in Gosu","10");
C=B.fN("Gosu Primitives Types","11");
B=A.fN("Gosu Case Sensitivity","12");
B=A.fN("Gosu Statement Terminators","13");
B=A.fN("Gosu Comments","14");
B=A.fN("Gosu Reserved Words","15");
B=A.fN("Notable Differences Between Gosu and Java","16");
B=A.fN("Get Ready for Gosu","17");
A=P.fN("Getting Started with Gosu Community Release","18");
B=A.fN("System Requirements","18#1455061");
B=A.fN("Getting Started With IntelliJ IDEA Gosu Plugin","19");
C=B.fN("Install the IntelliJ Gosu Plugin","19#1499941");
C=B.fN("Do Not Depend Directly on Gosu JARs","19#1505311");
C=B.fN("The Gosu Scratchpad","19#1505578");
C=B.fN("Keep Only One Project Open at a Time","19#1508717");
B=A.fN("Getting Started With Gosu Command Line Tools","20");
C=B.fN("Advanced Gosu Command Line Tool Usage","20#1496914");
B=A.fN("Using XML and SOAP Libraries with Gosu Community Release","21");
B=A.fN("Advanced Examples","22");
C=B.fN("Servlet Example","22#1506167");
A=P.fN("Gosu Command Line Shell","23");
B=A.fN("Gosu Command Line Tool Basics","24");
C=B.fN("Command Line Tool Options","24#2182333");
C=B.fN("Writing a Simple Gosu Command Line Program","24#2208954");
B=A.fN("Command Line Arguments","25");
B=A.fN("Gosu Interactive Shell","26");
B=A.fN("Helpful APIs for Command Line Gosu Programs","27");
A=P.fN("Gosu Programs","28");
B=A.fN("The Structure of a Gosu Program","29");
C=B.fN("Metaline as First Line","29#2209342");
C=B.fN("Functions in a Gosu Program","29#2209347");
C=B.fN("Setting the Class Path to Call Other Gosu or Java Classes","29#2209362");
C=B.fN("Advanced Remote Maven-style Configuration of Dependencies (Command Line Only)","29#2210532");
A=P.fN("Types","30");
B=A.fN("Access to Java Types","31");
B=A.fN("Primitive Types","32");
B=A.fN("Objects","33");
C=B.fN("Object Instantiation","33#1538265");
C=B.fN("Object Property Assignment","33#1538294");
C=B.fN("Object Property Access","33#1538306");
C=B.fN("Object Methods","33#1538329");
B=A.fN("Boolean Values","34");
B=A.fN("Sequences of Characters","35");
B=A.fN("Array Types","36");
C=B.fN("List Access Using Array Index Notation","36#1535845");
C=B.fN("Array Expansion","36#1535889");
C=B.fN("Associative Array Syntax for Property Access","36#1535394");
C=B.fN("Legacy Array Type","36#1537144");
B=A.fN("Numeric Literals","37");
B=A.fN("Compatibility with Earlier Gosu Releases","38");
C=B.fN("DateTime","38#1540293");
C=B.fN("Number","38#1541065");
C=B.fN("Array","38#1490826");
A=P.fN("Gosu Operators and Expressions","39");
B=A.fN("Gosu Operators","40");
C=B.fN("Operator Precedence","41");
B=A.fN("Standard Gosu Expressions","42");
B=A.fN("Arithmetic Expressions","43");
B=A.fN("Equality Expressions","44");
B=A.fN("Evaluation Expressions","45");
B=A.fN("Existence Testing Expressions","46");
B=A.fN("Logical Expressions","47");
B=A.fN("New Object Expressions","48");
B=A.fN("Relational Expressions","49");
B=A.fN("Unary Expressions","50");
B=A.fN("Importing Types and Package Namespaces","51");
B=A.fN("Conditional Ternary Expressions","52");
B=A.fN("Special Gosu Expressions","53");
C=B.fN("Function Calls","54");
C=B.fN("Static Method Calls","55");
C=B.fN("Static Property Paths","56");
B=A.fN("Handling Null Values In Expressions","57");
C=B.fN("Null-safe Property Access","57#1655840");
C=B.fN("Null-safe Default Operator","57#1606622");
C=B.fN("Null-safe Indexing for Arrays, Lists, and Maps","57#1598052");
C=B.fN("Null-safe Math Operators","57#1597472");
A=P.fN("Statements","58");
B=A.fN("Gosu Statements","59");
C=B.fN("Statement Lists","59#1440698");
B=A.fN("Gosu Variables","60");
C=B.fN("Variable Type Declaration","60#1141530");
C=B.fN("Variable Assignment","60#1453654");
B=A.fN("Gosu Conditional Execution and Looping","61");
C=B.fN("If() \u2026 Else() Statements","61#1142199");
C=B.fN("For() Statements","61#1456475");
C=B.fN("While() Statements","61#1141335");
C=B.fN("Do\u2026While() Statements","61#1137579");
C=B.fN("Switch() Statements","61#1137580");
B=A.fN("Gosu Functions","62");
C=B.fN("Named Arguments and Argument Defaults","62#1483902");
C=B.fN("Public and Private Functions","62#1483028");
A=P.fN("Intervals","63");
B=A.fN("What are Intervals?","64");
C=B.fN("Reversing Interval Order","64#1456056");
C=B.fN("Granularity (Step and Unit)","64#1456531");
B=A.fN("Writing Your Own Interval Type","65");
C=B.fN("Custom Iterable Intervals Using Sequenceable Items","65#1461393");
C=B.fN("Custom Iterable Intervals Using Manually-written Iterators","65#1462661");
C=B.fN("Custom Non-iterable Interval Types","65#1461152");
A=P.fN("Exception Handling","66");
B=A.fN("Try-Catch-Finally Constructions","67");
B=A.fN("Throw Statements","68");
B=A.fN("Catching Exceptions in Gosu","69");
B=A.fN("Object Lifecycle Management (\u2018using\u2019 Clauses)","70");
C=B.fN("Disposable Objects","70#1466707");
C=B.fN("Closeable Objects and \u2018using\u2019 Clauses","70#1466986");
C=B.fN("Reentrant Objects and \u2018using\u2019 Clauses","70#1457358");
C=B.fN("Returning Values from \u2018using\u2019 Clauses","70#1469250");
A=P.fN("Classes","71");
B=A.fN("What Are Classes?","72");
B=A.fN("Creating and Instantiating Classes","73");
C=B.fN("Creating a New Instance of a Class","73#2449212");
C=B.fN("Naming Conventions for Packages and Classes","73#2447745");
B=A.fN("Properties","74");
C=B.fN("Properties Act Like Data But They Are Dynamic and Virtual Functions","74#2477145");
C=B.fN("Property Paths are Null Tolerant","74#2465283");
C=B.fN("Static Properties","74#2449277");
C=B.fN("More Property Examples","74#2447851");
B=A.fN("Modifiers","75");
C=B.fN("Access Modifiers","75#2445688");
C=B.fN("Override Modifier","75#2449862");
C=B.fN("Abstract Modifier","75#2449868");
C=B.fN("Final Modifier","75#2449875");
C=B.fN("Static Modifier","75#2446412");
B=A.fN("Inner Classes","76");
C=B.fN("Named Inner Classes","76#2450636");
C=B.fN("Anonymous Inner Classes","76#2450064");
A=P.fN("Enumerations","77");
B=A.fN("Using Enumerations","78");
C=B.fN("Extracting Information from Enumerations","78#1459344");
C=B.fN("Comparing Enumerations","78#1459295");
A=P.fN("Interfaces","79");
B=A.fN("What is an Interface?","80");
B=A.fN("Defining and Using an Interface","81");
C=B.fN("Defining and Using Properties with Interfaces","81#1457203");
C=B.fN("Modifiers and Interfaces","81#1459141");
A=P.fN("Composition","82");
B=A.fN("Using Gosu Composition","83");
C=B.fN("Overriding Methods Independent of the Delegate Class","83#2201000");
C=B.fN("Declaring Delegate Implementation Type in the Variable Definition","83#2198236");
C=B.fN("Using One Delegate for Multiple Interfaces","83#2198240");
C=B.fN("Using Composition With Built-in Interfaces","83#2198246");
A=P.fN("Annotations","84");
B=A.fN("Annotating a Class, Method, Type, or Constructor","85");
C=B.fN("Built-in Annotations","85#1471842");
B=A.fN("Annotations at Run Time","86");
B=A.fN("Defining Your Own Annotations","87");
C=B.fN("Customizing Annotation Usage","87#1434674");
A=P.fN("Enhancements","88");
B=A.fN("Using Enhancements","89");
C=B.fN("Syntax for Using Enhancements","89#1439437");
C=B.fN("Creating a New Enhancement","89#1439200");
C=B.fN("Syntax for Defining Enhancements","89#1439430");
C=B.fN("Enhancement Naming and Package Conventions","89#1437458");
C=B.fN("Enhancements on Arrays","89#1438604");
A=P.fN("Gosu Blocks","90");
B=A.fN("What Are Blocks?","91");
B=A.fN("Basic Block Definition and Invocation","92");
B=A.fN("Variable Scope and Capturing Variables In Blocks","93");
B=A.fN("Argument Type Inference Shortcut In Certain Cases","94");
B=A.fN("Block Type Literals","95");
B=A.fN("Blocks and Collections","96");
B=A.fN("Blocks as Shortcuts for Anonymous Classes","97");
A=P.fN("Gosu Generics","98");
B=A.fN("Gosu Generics Overview","99");
B=A.fN("Using Gosu Generics","100");
C=B.fN("Parameterized Classes","100#1454721");
C=B.fN("Parameterized Methods","100#1454736");
B=A.fN("Other Unbounded Generics Wildcards","101");
B=A.fN("Generics and Blocks","102");
B=A.fN("How Generics Help Define Collection APIs","103");
B=A.fN("Multiple Dimensionality Generics","104");
B=A.fN("Generics With Custom \u2018Containers\u2019","105");
C=B.fN("Generics with Non-Containers","105#1446525");
A=P.fN("Collections","106");
B=A.fN("Basic Lists","107");
C=B.fN("Creating a List","107#1451974");
C=B.fN("Type Inference and List Initialization","107#1452009");
C=B.fN("Getting and Setting List Values","107#1467078");
C=B.fN("Special Behavior of List in Gosu","107#1466017");
B=A.fN("Basic Hash Maps","108");
C=B.fN("Creating a Hash Map","108#1452165");
C=B.fN("Getting and Setting Values in a Hash Map","108#1452408");
C=B.fN("Creating a Hash Map with Type Inference","108#1452539");
C=B.fN("Special Enhancements on Maps","108#1452216");
B=A.fN("List and Array Expansion (*.)","109");
C=B.fN("Array Flattening to Single Dimensional Array","109#1466345");
B=A.fN("Enhancement Reference for Collections and Related Types","110");
C=B.fN("Collections Enhancement Methods","111");
C=B.fN("Finding Data in Collections","111#1462591");
C=B.fN("Sorting Collections","111#1444564");
C=B.fN("Mapping Data in Collections","111#1442277");
C=B.fN("Iterating Across Collections","111#1442285");
C=B.fN("Partitioning Collections","111#1442296");
C=B.fN("Converting Lists, Arrays, and Sets","111#1449882");
C=B.fN("Flat Mapping a Series of Collections or Arrays","111#1450050");
C=B.fN("Sizes and Length of Collections and Strings are Equivalent","111#1443101");
A=P.fN("Gosu and XML","112");
B=A.fN("Manipulating XML Overview","113");
B=A.fN("Introduction to the XML Element in Gosu","114");
C=B.fN("Dollar Sign Prefix for Properties that Are XSD Types","115");
B=A.fN("Exporting XML Data","116");
C=B.fN("Export-related Methods on an XML Element","116#1866472");
C=B.fN("XML Serialization Options Reference and Examples","116#1911570");
B=A.fN("Parsing XML Data into an XML Element","117");
B=A.fN("Creating Many QNames in the Same Namespace","118");
B=A.fN("XSD-based Properties and Types","119");
C=B.fN("Important Concepts in XSD Properties and Types","119#1651042");
C=B.fN("XSD Generated Type Examples","119#1673249");
C=B.fN("Automatic Insertion into Lists","119#1673851");
C=B.fN("XSD List Property Example","119#1610237");
B=A.fN("Getting Data From an XML Element","120");
C=B.fN("Manipulating Elements and Values (Works With or Without XSD)","120#1538638");
C=B.fN("Attributes","120#1520181");
B=A.fN("Simple Values","121");
C=B.fN("Methods to Create XML Simple Values","121#1622820");
C=B.fN("XSD to Gosu Simple Type Mappings","121#1622952");
C=B.fN("Facet Validation","121#1623085");
B=A.fN("Access the Nillness of an Element","122");
B=A.fN("Automatic Creation of Intermediary Elements","123");
B=A.fN("Default and Fixed Attribute Values","124");
B=A.fN("Substitution Group Hierarchies","125");
B=A.fN("Element Sorting for XSD-based Elements","126");
B=A.fN("Built-in Schemas","127");
C=B.fN("The XSD that Defines an XSD (The Metaschema)","127#1541995");
B=A.fN("Schema Access Type","128");
A=P.fN("Calling WS-I Web Services from Gosu","129");
B=A.fN("Consuming WS-I Web Service Overview","129#2001852");
C=B.fN("Loading WS-I WSDL Directly into the File System","129#2064509");
C=B.fN("How Does Gosu Process WSDL?","129#2013784");
C=B.fN("Learning Gosu XML APIs","129#2047933");
C=B.fN("What Gosu Creates from Your WSDL","129#2043632");
C=B.fN("A Real Example: Weather","129#2047856");
C=B.fN("Request XML Complexity Affects Appearance of Method Arguments","129#2069072");
B=A.fN("Adding WS-I Configuration Options","130");
C=B.fN("HTTP Authentication","130#2064831");
C=B.fN("Setting a Timeout","130#2067960");
C=B.fN("Custom SOAP Headers","130#2052743");
C=B.fN("Server Override URL","130#2056586");
C=B.fN("Setting XML Serialization Options","130#2091456");
C=B.fN("Implementing Advanced Web Service Security with WSS4J","130#2052910");
B=A.fN("One-Way Methods","131");
B=A.fN("Asynchronous Methods","132");
B=A.fN("MTOM Attachments","133");
A=P.fN("Java and Gosu","134");
B=A.fN("Overview of Calling Java from Gosu","135");
C=B.fN("Java Classes are First-Class Types","135#2002026");
C=B.fN("Many Java Classes are Core Classes for Gosu","135#2002392");
C=B.fN("Java Packages in Scope","135#2002365");
C=B.fN("Static Members in Gosu","135#2047802");
C=B.fN("Simple Java Example","135#2121999");
C=B.fN("Java Get and Set Methods Convert to Gosu Properties","135#2021794");
C=B.fN("Interfaces","135#2020668");
C=B.fN("Enumerations","135#2020577");
C=B.fN("Annotations","135#2047848");
C=B.fN("Java Primitives","135#2047899");
B=A.fN("Deploying Your Java Classes","136");
B=A.fN("Java Class Loading, Delegation, and Package Naming","137");
C=B.fN("Java Class Loading Rules","137#2031881");
A=P.fN("Gosu Templates","138");
B=A.fN("Template Overview","139");
C=B.fN("Template Expressions","139#1464080");
C=B.fN("When to Escape Special Characters for Templates","140");
B=A.fN("Using Template Files","141");
C=B.fN("Creating and Running a Template File","141#1464601");
C=B.fN("Template Scriptlet Tags","141#1461443");
C=B.fN("Template Parameters","141#1463866");
C=B.fN("Extending a Template From a Class","141#1455745");
C=B.fN("Template Comments","141#1463274");
B=A.fN("Template Export Formats","141#1465221");
A=P.fN("Type System","142");
B=A.fN("The Type of All Types","143");
B=A.fN("Basic Type Coercion","143#1444327");
B=A.fN("Basic Type Checking","144");
C=B.fN("Automatic Downcasting for \u2018typeis\u2019 and \u2018typeof\u2019","144#1455253");
B=A.fN("Using Reflection","145");
C=B.fN("Type Object Properties","145#1441372");
C=B.fN("Java Type Reflection","145#1441477");
C=B.fN("Type System Class","145#1465566");
B=A.fN("Compound Types","146");
B=A.fN("Type Loaders","147");
A=P.fN("Running Local Shell Commands","148");
B=A.fN("Running Command Line Tools from Gosu","148#2186018");
A=P.fN("Checksums","149");
B=A.fN("Overview of Checksums","150");
B=A.fN("Creating Fingerprints","150#1442951");
C=B.fN("How to Output Data Inside a Fingerprint","150#1443786");
B=A.fN("Extending Fingerprints","150#1442456");
A=P.fN("Concurrency","151");
B=A.fN("Overview of Thread Safety and Concurrency","152");
B=A.fN("Gosu Scoping Classes (Pre-scoped Maps)","153");
B=A.fN("Concurrent Lazy Variables","154");
B=A.fN("Concurrent Cache","155");
B=A.fN("Concurrency with Monitor Locks and Reentrant Objects","156");
A=P.fN("Properties Files","157");
B=A.fN("Reading Properties Files","157#1458192");
A=P.fN("Coding Style","158");
B=A.fN("General Coding Guidelines","159");
C=B.fN("Omit Semicolons","159#1445233");
C=B.fN("Type Declarations","159#1445238");
C=B.fN("The == and != Operator Recommendations and Warnings","159#1445388");
C=B.fN("Class Variable and Class Property Recommendations","159#1446206");
C=B.fN("Use \u2018typeis\u2019 Inference","159#1454113");
}
